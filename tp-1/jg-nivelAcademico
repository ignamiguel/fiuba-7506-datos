{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 919,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import rcParams\n",
    "plt.style.use('default') ### haciendo los graficos un poco mas bonitos xD\n",
    "rcParams['figure.figsize'] = (15, 5)\n",
    "rcParams['font.family'] = 'Ubuntu'\n",
    "\n",
    "\n",
    "import datetime as datetime\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "postulantes = pd.read_csv('/home/pcsor/facu/datos_navent_fiuba/postulantes.csv', sep=',', encoding='utf-8', low_memory=False)\n",
    "postulantes = postulantes.drop('Unnamed: 0',axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 921,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "idpostulante\n",
       "YlMLGD    9\n",
       "54MQGz    8\n",
       "EZD29     8\n",
       "Name: nombre, dtype: int64"
      ]
     },
     "execution_count": 921,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postulantes.groupby('idpostulante')['nombre'].count().sort_values(ascending=False)[:3]\n",
    "#### Hay postulantes con varias carreras o estados academicos registrados\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 922,
   "metadata": {},
   "outputs": [],
   "source": [
    "grouped = postulantes.loc[:,['idpostulante','nombre']].groupby('idpostulante',as_index=False).agg('count').groupby('nombre',as_index=False).agg('count')\n",
    "grouped.columns = ['Carreras', 'Personas']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 923,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Carreras</th>\n",
       "      <th>Personas</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>108476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>56717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>18803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Carreras  Personas\n",
       "0         1    108476\n",
       "1         2     56717\n",
       "2         3     18803\n",
       "3         4      3992\n",
       "4         5       661\n",
       "5         6        86\n",
       "6         7        14\n",
       "7         8         2\n",
       "8         9         1"
      ]
     },
     "execution_count": 923,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped.head(9)\n",
    "#### Se puede ver que hay postulantes que tienen hasta 9 carreras registradas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Nivel Academico de los Usuarios"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Se definen varios niveles:\n",
    "\n",
    "* 5) Master/Doctorado \n",
    "* 4) Posgrado\n",
    "* 3) Universitario\n",
    "* 2) Terciario/Tecnico\n",
    "* 1) Secundario"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ps = postulantes.loc[postulantes['nombre'] != 'Otro']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ps.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ps.loc[ps['estado'] == 'En Curso', 'estado' ] = 1\n",
    "ps.loc[ps['estado'] == 'Abandonado', 'estado' ] = 2\n",
    "ps.loc[ps['estado'] == 'Graduado', 'estado'] = 3\n",
    "ps.loc[ps['nombre'] == 'Secundario', 'nombre'] = 1\n",
    "ps.loc[ps['nombre'] == 'Terciario/Técnico', 'nombre'] = 2\n",
    "ps.loc[ps['nombre'] == 'Posgrado', 'nombre'] = 4\n",
    "ps.loc[ps['nombre'] == 'Universitario', 'nombre'] = 3\n",
    "ps.loc[ps['nombre'] == 'Doctorado', 'nombre'] = 5\n",
    "ps.loc[ps['nombre'] == 'Master', 'nombre'] = 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 581,
   "metadata": {},
   "outputs": [],
   "source": [
    "sindup = ps.sort_values(['nombre','estado'], ascending=False).drop_duplicates('idpostulante')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sindup = sindup.drop(['fechanacimiento','sexo','estado'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sindup[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "toplot = sindup.groupby('nombre',as_index=False).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "toplot.columns = ['NivelAcademico','Cantidad']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "tox=toplot.NivelAcademico.tolist()\n",
    "height = toplot.Cantidad.tolist()\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(5,4))\n",
    "rects1 = ax.bar(tox, height , color='r')\n",
    "\n",
    "def autolabel(rects):\n",
    "#### funcion que realiza etiquetas\n",
    "    for rect in rects:\n",
    "        height = rect.get_height() #### obtiene la altura de la barra\n",
    "        ax.text(rect.get_x() + rect.get_width()/2. #### posiciona el label horizontalmente\n",
    "                , height - 3800, #### posiciona el label verticalmente\n",
    "                '%d' % int(height),\n",
    "                ha='center',\n",
    "                va='bottom',\n",
    "                fontweight='bold',\n",
    "               fontsize= 9)\n",
    "\n",
    "###[f.name for f in matplotlib.font_manager.fontManager.ttflist]\n",
    "###rcParams['font.size'] = 12\n",
    "###rcParams['font.family'] = 'FreeSans'\n",
    "### Codigo para cambiar las fonts del grafico.\n",
    "\n",
    "################### visualizacion de estilo tufteano minimalista ######################\n",
    "#####################################################################################\n",
    "ax.set_title('Nivel Académico (C/S finalizar).',fontweight='bold')\n",
    "#ax.set_xticks(ind + width / 2)\n",
    "ax.set_xticklabels( ('','Secundario', 'Terciario/Técnico','Universitario', 'Posgrado', 'Doctorado/Master'))\n",
    "#ax.set_xticks([])\n",
    "ax.set_yticks([])\n",
    "### Remuevo los ejes pero conservo las labels\n",
    "ax.set_ylabel('Cantidad de Usuarios',fontweight='bold')\n",
    "ax.set_xlabel('Nivel Académico',fontweight='bold')\n",
    "### pongo los nombres\n",
    "ax.spines['top'].set_visible(False)\n",
    "ax.spines['right'].set_visible(False)\n",
    "ax.spines['bottom'].set_visible(False)\n",
    "ax.spines['left'].set_visible(False)\n",
    "### remuevo los bordes\n",
    "plt.xticks(rotation=30)\n",
    "### giro los textos del eje x\n",
    "ax.xaxis.set_ticks_position('none')\n",
    "#####################################################################################\n",
    "#####################################################################################\n",
    "\n",
    "### saco los breaks\n",
    "\n",
    "autolabel(rects1)\n",
    "### aplico la funcion autolabel para poner la cantidad\n",
    "### sobre cada barra\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Finalizados VS (EnCurso y Abandonado)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 579,
   "metadata": {},
   "outputs": [],
   "source": [
    "sindup = ps.sort_values(['nombre','estado'], ascending=False).drop_duplicates('idpostulante')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>idpostulante</th>\n",
       "      <th>nombre</th>\n",
       "      <th>estado</th>\n",
       "      <th>fechanacimiento</th>\n",
       "      <th>sexo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>677</th>\n",
       "      <td>eo2p</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1981-02-16</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>680</th>\n",
       "      <td>8BkL</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1976-07-21</td>\n",
       "      <td>F</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>694</th>\n",
       "      <td>6Kbl</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1976-09-03</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    idpostulante nombre estado fechanacimiento sexo\n",
       "677         eo2p      5      3      1981-02-16    M\n",
       "680         8BkL      5      3      1976-07-21    F\n",
       "694         6Kbl      5      3      1976-09-03    M"
      ]
     },
     "execution_count": 369,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sindup[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 451,
   "metadata": {},
   "outputs": [],
   "source": [
    "hvsm = sindup.groupby('sexo')['sexo'].count()\n",
    "hvsm = pd.DataFrame(hvsm)\n",
    "hvsm.columns = ['cantidad']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[96424, 88285, 2705]"
      ]
     },
     "execution_count": 459,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hvsm.index.tolist()\n",
    "hvsm.cantidad.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 918,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f22ba9b76a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "tox=hvsm.index.tolist()\n",
    "height = hvsm.cantidad.tolist()\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(5,4))\n",
    "rects1 = ax.bar(tox, height , color='g', width = 0.3)\n",
    "\n",
    "def autolabel(rects):\n",
    "#### funcion que realiza etiquetas\n",
    "    for rect in rects:\n",
    "        height = rect.get_height() #### obtiene la altura de la barra\n",
    "        ax.text(rect.get_x() + rect.get_width()/2. #### posiciona el label horizontalmente\n",
    "                , height , #### posiciona el label verticalmente\n",
    "                '%d' % int(height),\n",
    "                ha='center',\n",
    "                va='bottom',\n",
    "                fontweight='bold',\n",
    "               fontsize= 9)\n",
    "\n",
    "###[f.name for f in matplotlib.font_manager.fontManager.ttflist]\n",
    "###rcParams['font.size'] = 12\n",
    "###rcParams['font.family'] = 'FreeSans'\n",
    "### Codigo para cambiar las fonts del grafico.\n",
    "\n",
    "################### visualizacion de estilo tufteano minimalista ######################\n",
    "#####################################################################################\n",
    "ax.set_title('Usuarios por Género',fontweight='bold')\n",
    "#ax.set_xticks(ind + width / 2)\n",
    "ax.set_xticklabels( ('Femenino','Masculino', 'No expecificado'))\n",
    "#ax.set_xticks([])\n",
    "ax.set_yticks([])\n",
    "### Remuevo los ejes pero conservo las labels\n",
    "ax.set_ylabel('Cantidad de Usuarios',fontweight='bold')\n",
    "ax.set_xlabel('Genero',fontweight='bold')\n",
    "### pongo los nombres\n",
    "ax.spines['top'].set_visible(False)\n",
    "ax.spines['right'].set_visible(False)\n",
    "ax.spines['bottom'].set_visible(False)\n",
    "ax.spines['left'].set_visible(False)\n",
    "### remuevo los bordes\n",
    "plt.xticks(rotation=30)\n",
    "### giro los textos del eje x\n",
    "ax.xaxis.set_ticks_position('none')\n",
    "#####################################################################################\n",
    "#####################################################################################\n",
    "\n",
    "### saco los breaks\n",
    "\n",
    "autolabel(rects1)\n",
    "### aplico la funcion autolabel para poner la cantidad\n",
    "### sobre cada barra\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 576,
   "metadata": {},
   "outputs": [],
   "source": [
    "sindup = sindup.drop('fechanacimiento',axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 481,
   "metadata": {},
   "outputs": [],
   "source": [
    "bynombre = sindup.groupby('nombre')['nombre'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 482,
   "metadata": {},
   "outputs": [],
   "source": [
    "bynombre = pd.DataFrame(bynombre)\n",
    "bynombre.columns = ['cantidad']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 483,
   "metadata": {},
   "outputs": [],
   "source": [
    "mujeres = sindup.loc[sindup['sexo'] == 'F']\n",
    "mujeresg = mujeres.groupby('nombre')['nombre'].count()\n",
    "mujeresg = pd.DataFrame(mujeresg)\n",
    "mujeresg.columns = ['Mujeres']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 484,
   "metadata": {},
   "outputs": [],
   "source": [
    "hombres = sindup.loc[sindup['sexo'] == 'M']\n",
    "hombresg = hombres.groupby('nombre')['nombre'].count()\n",
    "hombresg = pd.DataFrame(hombresg)\n",
    "hombresg.columns = ['Hombres']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 485,
   "metadata": {},
   "outputs": [],
   "source": [
    "encurso = sindup.loc[sindup['estado'] == 1]\n",
    "encurso = encurso.groupby('nombre')['nombre'].count()\n",
    "encurso = pd.DataFrame(encurso)\n",
    "encurso.columns = ['enCurso']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 486,
   "metadata": {},
   "outputs": [],
   "source": [
    "bynombre['Mujeres'] = mujeresg['Mujeres']\n",
    "bynombre['Hombre'] = hombresg['Hombres']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 500,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cantidad</th>\n",
       "      <th>Mujeres</th>\n",
       "      <th>Hombre</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nombre</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>62411</td>\n",
       "      <td>28060</td>\n",
       "      <td>33162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27429</td>\n",
       "      <td>15593</td>\n",
       "      <td>11480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>87838</td>\n",
       "      <td>48298</td>\n",
       "      <td>38455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6050</td>\n",
       "      <td>3003</td>\n",
       "      <td>3004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3686</td>\n",
       "      <td>1470</td>\n",
       "      <td>2184</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        cantidad  Mujeres  Hombre\n",
       "nombre                           \n",
       "1          62411    28060   33162\n",
       "2          27429    15593   11480\n",
       "3          87838    48298   38455\n",
       "4           6050     3003    3004\n",
       "5           3686     1470    2184"
      ]
     },
     "execution_count": 500,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bynombre"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 552,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f22d599a908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x1=bynombre.index.tolist()\n",
    "y1=bynombre.cantidad.tolist()\n",
    "y2=bynombre.Mujeres.tolist()\n",
    "y3=bynombre.Hombre.tolist()\n",
    "\n",
    "ind = np.arange(5)\n",
    "ancho = 0.35\n",
    "fig, ax = plt.subplots(figsize=(5,4))\n",
    "rects2 = ax.bar(ind, y2 , color='r', width = 0.35)\n",
    "rects3 = ax.bar(ind + ancho , y3, color='b', width =0.35)\n",
    "\n",
    "def autolabel(rects,offset,col):\n",
    "#### funcion que realiza etiquetas\n",
    "#### el offset las corre verticalmente \n",
    "#### el col le cambia el color a la etiqueta\n",
    "    for rect in rects:\n",
    "        height = rect.get_height() #### obtiene la altura de la barra\n",
    "        bottom = rect.get_y()\n",
    "        ax.text(rect.get_x() + rect.get_width()/2. #### posiciona el label horizontalmente\n",
    "                , height + bottom + offset, #### posiciona el label verticalmente\n",
    "                '%d' % int(height),\n",
    "                ha='center',\n",
    "                va='bottom',\n",
    "                fontweight='bold',\n",
    "                color = col,\n",
    "               fontsize= 8)\n",
    "\n",
    "################### visualizacion de estilo tufteano minimalista ######################\n",
    "#####################################################################################\n",
    "ax.set_title('Usuarios por Género',fontweight='bold')\n",
    "#ax.set_xticks(ind + width / 2)\n",
    "ax.set_xticklabels(('','Secundario', 'Terciario/Técnico','Universitario', 'Posgrado', 'Doctorado/Master'))\n",
    "#ax.set_xticks([])\n",
    "ax.set_yticks([])\n",
    "### Remuevo los ejes pero conservo las labels\n",
    "ax.set_ylabel('Cantidad de Usuarios',fontweight='bold')\n",
    "ax.set_xlabel('Género',fontweight='bold')\n",
    "### pongo los nombres\n",
    "ax.spines['top'].set_visible(False)\n",
    "ax.spines['right'].set_visible(False)\n",
    "ax.spines['bottom'].set_visible(False)\n",
    "ax.spines['left'].set_visible(False)\n",
    "### remuevo los bordes\n",
    "plt.xticks(rotation=30)\n",
    "### giro los textos del eje x\n",
    "ax.xaxis.set_ticks_position('none')\n",
    "ax.legend((rects2[0], rects3[0]), ('Mujer', 'Hombre'))\n",
    "#####################################################################################\n",
    "#####################################################################################\n",
    "\n",
    "### saco los breaks\n",
    "\n",
    "autolabel(rects2,0, \"#ff0000\")\n",
    "autolabel(rects3,0, \"#0066ff\")\n",
    "\n",
    "\n",
    "\n",
    "### aplico la funcion autolabel para poner la cantidad\n",
    "### sobre cada barra\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 757,
   "metadata": {},
   "outputs": [],
   "source": [
    "acadef = sindup.loc[sindup['sexo'] == 'F']\n",
    "acadef = acadef.drop(['sexo','fechanacimiento'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 800,
   "metadata": {},
   "outputs": [],
   "source": [
    "aver= acadef.groupby(['nombre','estado']).count().sort_index(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 759,
   "metadata": {},
   "outputs": [],
   "source": [
    "academ = sindup[sindup['sexo'] == 'M']\n",
    "academ = academ.drop(['sexo','fechanacimiento'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 801,
   "metadata": {},
   "outputs": [],
   "source": [
    "aver1= academ.groupby(['nombre','estado']).count().sort_index(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 755,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 916,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f22c80ccc88>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def autolabel(ax,rects,offset,col):\n",
    "#### funcion que realiza etiquetas<\n",
    "#### el offset las corre verticalmente \n",
    "#### el col le cambia el color a la etiqueta\n",
    "    for rect in rects:\n",
    "        height = rect.get_height() #### obtiene la altura de la barra\n",
    "        bottom = rect.get_y()\n",
    "        ax.text(rect.get_x() + rect.get_width()/2. #### posiciona el label horizontalmente\n",
    "                , height + bottom + offset, #### posiciona el label verticalmente\n",
    "                '%d' % int(height),\n",
    "                ha='center',\n",
    "                va='bottom',\n",
    "                fontweight='bold',\n",
    "                color = col,\n",
    "               fontsize= 8)\n",
    "\n",
    "x1=aver.index.tolist()\n",
    "y1=aver.idpostulante.tolist()\n",
    "y2=aver1.idpostulante.tolist()\n",
    "xlab = [\"Graduado\", \"Abandonado\", \"Cursando\"] \n",
    "textlabel = ['Doctorado/Master','Posgrado','Universitario','Terciario/Técnico','Secundario']\n",
    "\n",
    "ind = np.arange(3)\n",
    "ancho = 0.3\n",
    "ax=(ax1, ax2, ax3, ax4, ax5)\n",
    "fig, ax = plt.subplots(1, 5, sharex=True, sharey=True)\n",
    "fig.set_size_inches(12, 4)\n",
    "\n",
    "for i in range(5):\n",
    "    rect1 = ax[i].bar(ind + ancho , y2[i*3:i*3+3], color='b', width =ancho)\n",
    "    rect2 = ax[i].bar(ind, y1[i*3:i*3+3] , color='r', width = ancho)\n",
    "    plt.setp(ax[i].get_xticklabels(), rotation=30)\n",
    "    ax[i].set_xticks(ind + width / 2)\n",
    "    ax[i].set_xticklabels(xlab)\n",
    "    autolabel(ax[i],rect2,0, \"#ff0000\")\n",
    "    autolabel(ax[i],rect1,0, \"#0066ff\")\n",
    "    ax[i].set_yticks([])\n",
    "    ax[i].set_title(textlabel[i],fontsize=10)\n",
    "    \n",
    "    \n",
    "fig.text(0.5, -0.1, ' -- Nivel Académico -- ', ha='center', va='center',fontweight='bold',fontsize = 11)\n",
    "fig.text(0.1, 0.5, ' -- Cantidad de Usuarios -- ', ha='center', va='center', rotation='vertical',fontweight='bold',fontsize = 11)\n",
    "fig.text(0.5, 1, 'Cantidad de personas en cada nivel académico', ha='center', va='center',fontweight='bold',fontsize = 14)\n",
    "fig.legend((rect2[0],rect1[0]), ('Mujer', 'Hombre'))\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
